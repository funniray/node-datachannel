name: Build - Win - Arm64

on:
  workflow_dispatch:
  # push:
  #   tags:
  #     - v*

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build-windows-arm64:
    runs-on: windows-2022
    strategy:
      matrix:
        node-version: [18]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set Up MSVC for ARM64 Cross Compilation
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_arm64  # Sets up cross-compilation from x64 to ARM64

      - name: Clone OpenSSL
        run: git clone https://github.com/openssl/openssl.git --branch openssl-3.4.1 --depth 1 --single-branch
      
      - name: Configure OpenSSL
        run: perl Configure VC-WIN64-CLANGASM-ARM no-shared
        working-directory: openssl
        env:
          CFLAGS: -DNO_INTERLOCKEDOR64

      - name: Build OpenSSL
        run: nmake
        working-directory: openssl
        env:
          CFLAGS: -DNO_INTERLOCKEDOR64

      - name: Install Node dependencies
        run: npm install --ignore-scripts

      - name: Compile
        run: |
          .\node_modules\.bin\cmake-js -A arm64 -a arm64 --CDOPENSSL_ROOT_DIR="$pwd\openssl"
#          .\node_modules\.bin\prebuild -r napi --backend cmake-js --arch arm64 --upload -u ${{ secrets.GITHUB_TOKEN }} -- --CDOPENSSL_ROOT_DIR="$pwd\openssl"
        shell: pwsh

      - uses: actions/upload-artifact@v4
        with:
          name: win-arm64
          path: build/Release/*

      # - name: Upload
      #   run: node_modules/.bin/prebuild -r napi --upload -u ${{ secrets.GITHUB_TOKEN }}
      #   env:
      #     CI: true
